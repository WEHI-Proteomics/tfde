[net]
# Testing
# batch=1
# subdivisions=1

# Training

# for GTX 1070
# batch=64            # the number of images for which the weights_update will be accumulated, and the weights will be updated
# subdivisions=8     # mini batch = batch / subdivisions = the number of images uploaded to the GPU at a time
# width=1024
# height=1024

# for V100
batch=64            # the number of images for which the weights_update will be accumulated, and the weights will be updated
subdivisions=8     # mini batch = batch / subdivisions = the number of images uploaded to the GPU at a time
width=1024
height=1024

channels=3
momentum=0.9
decay=0.0005
# angle=0
# saturation = 1.5
# exposure = 1.5
# hue=.1
flip=0

learning_rate=0.001
burn_in=1000
max_batches = 5200
policy=steps
steps=4000,4500
scales=.1,.1


[convolutional]
batch_normalize=1
filters=16
size=3
stride=1
pad=1
activation=leaky

[maxpool]
size=2
stride=2

[convolutional]
batch_normalize=1
filters=32
size=3
stride=1
pad=1
activation=leaky

[maxpool]
size=2
stride=2

[convolutional]
batch_normalize=1
filters=64
size=3
stride=1
pad=1
activation=leaky

[maxpool]
size=2
stride=2

[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

[maxpool]
size=2
stride=2

[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[maxpool]
size=2
stride=2

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

[maxpool]
size=2
stride=1

[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky

###########

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

[convolutional]
size=1
stride=1
pad=1
filters=27  # filters=(classes + 5)*<number of mask>
activation=linear



[yolo]
mask = 6,7,8
anchors = 4,7, 7,15, 13,25,   25,42, 41,67, 75,94,   91,162, 158,205, 250,332
classes=4
num=9
jitter=0
ignore_thresh = .7
truth_thresh = 1
random=0

[route]
layers = -4

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[upsample]
stride=2

[route]
layers = -1, 8

[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[convolutional]
size=1
stride=1
pad=1
filters=27  # filters=(classes + 5)*<number of mask>
activation=linear

[yolo]
mask = 3,4,5
anchors = 4,7, 7,15, 13,25,   25,42, 41,67, 75,94,   91,162, 158,205, 250,332
classes=4
num=9
jitter=0
ignore_thresh = .7
truth_thresh = 1
random=0



[route]
layers = -3

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[upsample]
stride=2

[route]
layers = -1, 6

[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

[convolutional]
size=1
stride=1
pad=1
filters=27  # filters=(classes + 5)*<number of mask>
activation=linear

[yolo]
mask = 0,1,2
anchors = 4,7, 7,15, 13,25,   25,42, 41,67, 75,94,   91,162, 158,205, 250,332
classes=4
num=9
jitter=0
ignore_thresh = .7
truth_thresh = 1
random=0
