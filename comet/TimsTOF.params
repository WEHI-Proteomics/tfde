################################################################################
# Sample parameter file
#
# On each line, anything after a '#' will be ignored.
# The format is:
#
# <parameter-name>=<value>
#
################################################################################

# Crux parameter file (generated by Crux version 3.0)
# Full documentation available at http://cruxtoolkit.sourceforge.net/
# comet_version 2016.01 rev. 1
# Everything following the '#' symbol is treated as a comment.

# Path where pin file will be written instead of make-pin.pin.
# It is optional for make-pin
output-file=

# Specify the verbosity of the current processes. Each level prints the
# following messages, including all those at lower verbosity levels: 0-fatal
# errors, 10-non-fatal errors, 20-warnings, 30-information on the progress of
# execution, 40-more progress information, 50-debug info, 60-detailed debug
# info.
# Available for all crux programs.
verbosity=40

# A file containing parameters.
# Available for all crux programs. Any options specified on the command line
# will override values in the parameter file.
parameter-file=

# Replace existing files if true or fail when trying to overwrite a file if
# false.
# Available for all crux programs.  Applies to parameter file as well as index,
# search, and analysis output files.
overwrite=true

# Specify the enzyme used to digest the proteins in silico. Available enzymes
# (with the corresponding digestion rules indicated in parentheses) include
# no-enzyme ([X]|[X]), trypsin ([RK]|{P}), trypsin/p ([RK]|[]), chymotrypsin
# ([FWYL]|{P}), elastase ([ALIV]|{P}), clostripain ([R]|[]), cyanogen-bromide
# ([M]|[]), iodosobenzoate ([W]|[]), proline-endopeptidase ([P]|[]),
# staph-protease ([E]|[]), asp-n ([]|[D]), lys-c ([K]|{P}), lys-n ([]|[K]),
# arg-c ([R]|{P}), glu-c ([DE]|{P}), pepsin-a ([FL]|{P}),
# elastase-trypsin-chymotrypsin ([ALIVKRWFY]|{P}). Specifying --enzyme no-enzyme
# yields a non-enzymatic digest. Warning: the resulting index may be quite
# large.
# Available for crux-generate-peptides and crux tide-index.
enzyme=trypsin

# Specify rules for in silico digestion of protein sequences. Overrides the
# enzyme option. Two lists of residues are given enclosed in square brackets or
# curly braces and separated by a |. The first list contains residues
# required/prohibited before the cleavage site and the second list is residues
# after the cleavage site. If the residues are required for digestion, they are
# in square brackets, '[' and ']'. If the residues prevent digestion, then they
# are enclosed in curly braces, '{' and '}'. Use X to indicate all residues. For
# example, trypsin cuts after R or K but not before P which is represented as
# [RK]|{P}. AspN cuts after any residue but only before D which is represented
# as [X]|[D].
#
custom-enzyme=

# Maximum number of missed cleavages per peptide to allow in enzymatic
# digestion.
# Available from command line or parameter file for crux-generate-peptides. When
# used with enzyme=<trypsin|elastase|chymotrypsin> includes peptides containing
# one or more potential cleavage sites.
missed-cleavages=0

# Specify the parser to use for reading in MS/MS spectra.
# Available for search-for-xlinks.
spectrum-parser=pwiz

# Output an mzIdentML results file to the output directory.
# Available for tide-search, percolator.
mzid-output=false

# Output a Percolator input (PIN) file to the output directory.
# Available for tide-search.
pin-output=false

# Output a Percolator pout.xml format results file to the output directory.
# Available for percolator.
pout-output=false

# Output a pepXML results file to the output directory.
# Available for tide-search, q-ranker, barista, percolator.
pepxml-output=false

# Output a tab-delimited results file to the output directory.
# Available for tide-search, percolator, q-ranker, barista.
txt-output=true

# The fileroot string will be added as a prefix to all output file names.
# Available for all commands that produce an output directory.
fileroot=

# The name of the directory where output files will be created.
# Available for most commands.
output-dir=comet-output

# Specify the number of matches to report for each spectrum.
# Available for tide-search and crux percolator
top-match=5

# When given a unsigned integer value seeds the random number generator with
# that value. When given the string "time" seeds the random number generator
# with the system time.
# Available for all Crux commands.
seed=1

# Set the precision for scores written to sqt and text files.
# Available for all commands.
precision=6

# Set the precision for masses and m/z written to sqt and .txt files. Note that
# this parameter only takes effect when specified in the parameter file.
# Available for all commands.
mass-precision=4

# When given a unsigned integer value seeds the random number generator with
# that value. When given the string "time" seeds the random number generator
# with the system time.
# Available for all percolator
percolator-seed=1

# Output the computed features in tab-delimited text format.
# Available for percolator and q-ranker.
feature-file-out=false

# Include decoys (PSMs, peptides, and/or proteins) in the XML output.
# Available for crux percolator
decoy-xml-output=false

# Specifies the prefix of the protein names that indicate a decoy.
# Available for percolator
decoy-prefix=decoy_

# Output final weights to a file named "percolator.weights.txt".
# Available for crux percolator
output-weights=false

# Read initial weights from the given file (one per line).
# Available for crux percolator
init-weights=

# Penalty for mistakes made on positive examples. If this value is set to 0,
# then it is set via cross validation over the values {0.1, 1, 10}, selecting
# the value that yields the largest number of PSMs identified at the q-value
# threshold set via the --test-fdr parameter.
# Available for crux percolator
c-pos=0

# Penalty for mistake made on negative examples. If not specified, then this
# value is set by cross validation over {0.1, 1, 10}.
# Available for crux percolator
c-neg=0

# False discovery rate threshold to define positive examples in training.
# Available for crux percolator
train-fdr=0.01

# False discovery rate threshold used in selecting hyperparameters during
# internal cross-validation and for reporting the final results.
# Available for crux percolator.
test-fdr=0.01

# Apply the specified threshold to PSM, peptide and protein probabilities to
# obtain a faster estimate of the alpha, beta and gamma parameters.
# Available for crux percolator.
fido-fast-gridsearch=0

# Do not approximate the posterior distribution by allowing large graph
# components to be split into subgraphs. The splitting is done by duplicating
# peptides with low probabilities. Splitting continues until the number of
# possible configurations of each subgraph is below 2^18
# Available for crux percolator
fido-no-split-large-components=false

# To speed up inference, proteins for which none of the associated peptides has
# a probability exceeding the specified threshold will be assigned probability =
# 0.
# Available for crux percolator
fido-protein-truncation-threshold=0.01

# Replace the target-decoy competition with the method qvality to assign
# q-values and PEPs. Note that this option only has an effect if the input PSMs
# are from separate target and decoy searches.
# Available for crux percolator
post-processing-qvality=false

# Maximum number of iterations for training.
# Available for crux percolator
maxiter=50

# Quicker execution by reduced internal cross-validation.
# Available for crux percolator
quick-validation=false

# In its initial round of training, Percolator uses one feature to induce a
# ranking of PSMs. By default, Percolator will select the feature that produces
# the largest set of target PSMs at a specified FDR threshold (cf. --train-fdr).
# This option allows the user to specify which feature is used for the initial
# ranking, using the name as a string. The name can be preceded by a hyphen
# (e.g. "-XCorr") to indicate that a lower value is better.
# Available for crux percolator
default-direction=

# Use unit normalization (i.e., linearly rescale each PSM's feature vector to
# have a Euclidean length of 1), instead of standard deviation normalization.
# Available for crux percolator.
unitnorm=false

# Measure performance on test set each iteration.
# Available for crux percolator.
test-each-iteration=false

# When set to T, interpret the input file as a PIN file.
# Available for crux percolator.
feature-file-in=false

# Use the picked protein-level FDR to infer protein probabilities, provide the
# fasta file as the argument to this flag.
# Available for crux percolator
picked-protein=

# Type of enzyme
# Available for crux percolator
protein-enzyme=trypsin

# By default, if the peptides associated with protein A are a proper subset of
# the peptides associated with protein B, then protein A is eliminated and all
# the peptides are considered as evidence for protein B. Note that this
# filtering is done based on the complete set of peptides in the database, not
# based on the identified peptides in the search results. Alternatively, if this
# option is set and if all of the identified peptides associated with protein B
# are also associated with protein A, then Percolator will report a
# comma-separated list of protein IDs, where the full-length protein B is first
# in the list and the fragment protein A is listed second. Not available for
# Fido.
# Available for crux percolator
protein-report-fragments=false

# If multiple database proteins contain exactly the same set of peptides, then
# Percolator will randomly discard all but one of the proteins. If this option
# is set, then the IDs of these duplicated proteins will be reported as a
# comma-separated list. Not available for Fido.
# Available for crux percolator
protein-report-duplicates=false

# Use the Fido algorithm to infer protein probabilities. Must be true to use any
# of the Fido options.
# Available for crux percolator
protein=true

# Specify the probability with which a present protein emits an associated
# peptide. Set by grid search (see --fido-gridsearch-depth parameter) if not
# specified.
# Available for crux percolator if --protein T is set.
fido-alpha=0

# Specify the probability of the creation of a peptide from noise. Set by grid
# search (see --fido-gridsearch-depth parameter) if not specified.
# Available for crux percolator if --protein T is set.
fido-beta=0

# Specify the prior probability that a protein is present in the sample. Set by
# grid search (see --fido-gridsearch-depth parameter) if not specified.
# Available for crux percolator if --protein T is set.
fido-gamma=0

# Estimate empirical p-values and q-values for proteins using target-decoy
# analysis.
# Available for crux percolator if --protein T is set.
fido-empirical-protein-q=false

# Set depth of the grid search for alpha, beta and gamma estimation.
# Available for crux percolator if --protein T is set.
fido-gridsearch-depth=0

# Q-value threshold that will be used in the computation of the MSE and ROC AUC
# score in the grid search.
# Available for crux percolator if --protein T is set.
fido-gridsearch-mse-threshold=0.05

# By default, Percolator will examine the learned weights for each feature, and
# if the weight appears to be problematic, then percolator will discard the
# learned weights and instead employ a previously trained, static score vector.
# This switch allows this error checking to be overriden.
# Available for crux percolator.
override=true

# Use retention time features calculated as in "Improving tandem mass spectrum
# identification using peptide retention time prediction across diverse
# chromatography conditions" by Klammer AA, Yi X, MacCoss MJ and Noble WS.
# (Analytical Chemistry. 2007 Aug 15;79(16):6111-8.).
# Available for crux percolator
klammer=false

# Do not remove redundant peptides; keep all PSMs and exclude peptide level
# probability.
# Available for crux percolator
only-psms=false

# Specify that the search results are provided as lists of files, rather than as
# individual files.
# Available for barista and percolator.
list-of-files=false

# Specify the input and output delimiter to use when processing the delimited
# file.  The argument can be either a single character or the keyword 'tab.'
# Available for the delimited utility programs.
delimiter=tab

####################
# Comet Parameters #
####################
# 0=no, 1=concatenated search, 2=separate search.
# Available for comet.
decoy_search=1

# 0=poll CPU to set num threads; else specify num threads directly.
# Available for comet.
num_threads=0

# Controls the mass tolerance value.  The mass tolerance is set at +/- the
# specified number i.e. an entered value of "1.0" applies a -1.0 to +1.0
# tolerance. The units of the mass tolerance is controlled by the parameter
# "peptide_mass_units".
# Available for comet.
peptide_mass_tolerance=20

# 0=amu, 1=mmu, 2=ppm.
# Available for comet.
peptide_mass_units=2

# 0=average masses, 1=monoisotopic masses.
# Available for comet.
mass_type_parent=1

# 0=average masses, 1=monoisotopic masses
mass_type_fragment=1

# 0=singly charged peptide mass, 1=precursor m/z.
# Available for comet.
precursor_tolerance_type=1

# 0=off, 1=on -1/0/1/2/3 (standard C13 error), 2=-8/-4/0/4/8 (for +4/+8
# labeling).
# Available for comet.
isotope_error=0

# Specify a search enzyme from the end of the parameter file.
# Available for comet.
search_enzyme_number=1

# valid values are 1 (semi-digested), 2 (fully digested), 8 N-term, 9 C-term.
# Available for comet.
num_enzyme_termini=2

# Maximum value is 5; for enzyme search.
# Available for comet.
allowed_missed_cleavage=2

# Binning to use on fragment ions.
# Available for comet. Def 1.000507
fragment_bin_tol=0.02

# Offset position to start the binning (0.0 to 1.0).
# Available for comet. Def 0.4
fragment_bin_offset=0

# 0=default peak shape, 1=M peak only.
# Available for comet.
theoretical_fragment_ions=0

# Controls whether or not A-ions are considered in the search (0 - no, 1 - yes).
# Available for comet.
use_A_ions=1

# Controls whether or not B-ions are considered in the search (0 - no, 1 - yes).
# Available for comet.
use_B_ions=1

# Controls whether or not C-ions are considered in the search (0 - no, 1 - yes).
# Available for comet.
use_C_ions=0

# Controls whether or not X-ions are considered in the search (0 - no, 1 - yes).
# Available for comet.
use_X_ions=0

# Controls whether or not Y-ions are considered in the search (0 - no, 1 - yes).
# Available for comet.
use_Y_ions=1

# Controls whether or not Z-ions are considered in the search (0 - no, 1 - yes).
# Available for comet.
use_Z_ions=0

# 0=no, 1= yes to consider NH3/H2O neutral loss peak.
# Available for comet.
use_NL_ions=1

# 0=no, 1=yes  write sqt file.
# Available for comet.
output_sqtfile=0

# 0=no, 1=yes  write tab-delimited text file.
# Available for comet.
output_txtfile=1

# 0=no, 1=yes  write pep.xml file.
# Available for comet.
output_pepxmlfile=0

# 0=no, 1=yes write percolator file.
# Available for comet.
output_percolatorfile=1

# 0=no, 1=yes  write .out files.
# Available for comet.
output_outfiles=0

# 0=no, 1=yes to replace Sp with expect in out & sqt.
# Available for comet.
print_expect_score=1

# num peptide results to show.
# Available for comet.
num_output_lines=5

# 0=no, 1=yes for out files only.
# Available for comet.
show_fragment_ions=0

# Sample enzyme which is possibly different than the one applied to the search.
# Used to calculate NTT & NMC in pepXML output.
# Available for comet.
sample_enzyme_number=1

# Start and scan scan range to search; 0 as first entry ignores parameter.
# Available for comet.
scan_range=0 0

# Precursor charge range to analyze; does not override mzXML charge; 0 as first
# entry ignores parameter.
# Available for comet.
precursor_charge=0 0

# Specifies the whether to override existing precursor charge state information
# when present in the files with the charge range specified by the
# "precursor_charge" parameter.
# Available for comet.
override_charge=0

# MS level to analyze, valid are levels 2 or 3.
# Available for comet.
ms_level=2

# Specifies which scan types are searched.
# Available for comet.
activation_method=ALL

# MH+ peptide mass range to analyze.
# Available for comet.
digest_mass_range=700.0 5000.0

# Number of search hits to store internally.
# Available for comet.
num_results=50

# For '.out' file output only, 0=search everything again, 1=don't search if .out
# exists.
# Available for comet.
skip_researching=1

# Set maximum fragment charge state to analyze (allowed max 5).
# Available for comet.
max_fragment_charge=1

# Set maximum precursor charge state to analyze (allowed max 9).
# Available for comet.
max_precursor_charge=6

# 0=proteinDB, 1-6, 7=forward three, 8=reverse three, 9=all six.
# Available for comet.
nucleotide_reading_frame=0

# 0=leave sequences as-is; 1=also consider sequence w/o N-term methionine.
# Available for comet.
clip_nterm_methionine=1

# Maximum number of spectra to search at a time; 0 to search the entire scan
# range in one loop.
# Available for comet.
spectrum_batch_size=10000

# Specifies the prefix of the protein names that indicates a decoy.
# Available for comet.
decoy_prefix=decoy_

# Specifies the suffix string that is appended to the base output name for the
# pep.xml, pin.xml, txt and sqt output files.
# Available for comet.
output_suffix=

# Specifies one or more mass offsets to apply. This value(s) are effectively
# subtracted from each precursor mass such that peptides that are smaller than
# the precursor mass by the offset value can still be matched to the respective
# spectrum.
# Available for comet.
mass_offsets=

# Minimum number of peaks in spectrum to search.
# Available for comet.
minimum_peaks=10

# Minimum intensity value to read in.
# Available for comet.
minimum_intensity=0

# 0=no, 1=yes, 2=all charge reduced precursor peaks (for ETD).
# Available for comet.
remove_precursor_peak=0

# +- Da tolerance for precursor removal.
# Available for comet.
remove_precursor_tolerance=1.5

# For iTRAQ/TMT type data; will clear out all peaks in the specified m/z range.
# Available for comet.
clear_mz_range=0.0 0.0

# Up to 9 variable modifications are supported; format: "<mass> <residues>
# <0=variable/1=binary> <max mods per a peptide>" e.g. 79.966331 STY 0 3.
# Available for comet.
variable_mod01=15.9949 M 0 3 -1 0 0

# Up to 9 variable modifications are supported; format: "<mass> <residues>
# <0=variable/1=binary> <max mods per a peptide>" e.g. 79.966331 STY 0 3.
# Available for comet.
variable_mod02=42.010565 nK 0 3 0 0 0

# Up to 9 variable modifications are supported; format: "<mass> <residues>
# <0=variable/1=binary> <max mods per a peptide>" e.g. 79.966331 STY 0 3.
# Available for comet.
variable_mod03=-17.026549 Q 0 1 0 2 0

# Up to 9 variable modifications are supported; format: "<mass> <residues>
# <0=variable/1=binary> <max mods per a peptide>" e.g. 79.966331 STY 0 3.
# Available for comet.
variable_mod04=0.0 null 0 4 -1 0 0

# Up to 9 variable modifications are supported; format: "<mass> <residues>
# <0=variable/1=binary> <max mods per a peptide>" e.g. 79.966331 STY 0 3.
# Available for comet.
variable_mod05=0.0 null 0 4 -1 0 0

# Up to 9 variable modifications are supported; format: "<mass> <residues>
# <0=variable/1=binary> <max mods per a peptide>" e.g. 79.966331 STY 0 3.
# Available for comet.
variable_mod06=0.0 null 0 4 -1 0 0

# Up to 9 variable modifications are supported; format: "<mass> <residues>
# <0=variable/1=binary> <max mods per a peptide>" e.g. 79.966331 STY 0 3.
# Available for comet.
variable_mod07=0.0 null 0 4 -1 0 0

# Up to 9 variable modifications are supported; format: "<mass> <residues>
# <0=variable/1=binary> <max mods per a peptide>" e.g. 79.966331 STY 0 3.
# Available for comet.
variable_mod08=0.0 null 0 4 -1 0 0

# Up to 9 variable modifications are supported; format: "<mass> <residues>
# <0=variable/1=binary> <max mods per a peptide>" e.g. 79.966331 STY 0 3.
# Available for comet.
variable_mod09=0.0 null 0 4 -1 0 0

# Specifies the total/maximum number of residues that can be modified in a
# peptide.
# Available for comet.
max_variable_mods_in_peptide=5

# Controls whether the analyzed peptides must contain at least one variable
# modification.
# Available for comet.
require_variable_mod=0

# Specifiy a static modification to the c-terminus of all peptides.
# Available for comet.
add_Cterm_peptide=0

# Specify a static modification to the n-terminus of all peptides.
# Available for comet.
add_Nterm_peptide=0

# Specify a static modification to the c-terminal peptide of each protein.
# Available for comet.
add_Cterm_protein=0

# Specify a static modification to the n-terminal peptide of each protein.
# Available for comet.
add_Nterm_protein=0

# Specify a static modification to the residue A.
# Available for comet.
add_A_alanine=0

# Specify a static modification to the residue B.
# Available for comet.
add_B_user_amino_acid=0

# Specify a static modification to the residue C.
# Available for comet.
add_C_cysteine=57.021464

# Specify a static modification to the residue D.
# Available for comet.
add_D_aspartic_acid=0

# Specify a static modification to the residue E.
# Available for comet.
add_E_glutamic_acid=0

# Specify a static modification to the residue F.
# Available for comet.
add_F_phenylalanine=0

# Specify a static modification to the residue G.
# Available for comet.
add_G_glycine=0

# Specify a static modification to the residue H.
# Available for comet.
add_H_histidine=0

# Specify a static modification to the residue I.
# Available for comet.
add_I_isoleucine=0

# Specify a static modification to the residue J.
# Available for comet.
add_J_user_amino_acid=0

# Specify a static modification to the residue K.
# Available for comet.
add_K_lysine=0

# Specify a static modification to the residue L.
# Available for comet.
add_L_leucine=0

# Specify a static modification to the residue M.
# Available for comet.
add_M_methionine=0

# Specify a static modification to the residue N.
# Available for comet.
add_N_asparagine=0

# Specify a static modification to the residue O.
# Available for comet.
add_O_ornithine=0

# Specify a static modification to the residue P.
# Available for comet.
add_P_proline=0

# Specify a static modification to the residue Q.
# Available for comet.
add_Q_glutamine=0

# Specify a static modification to the residue R.
# Available for comet.
add_R_arginine=0

# Specify a static modification to the residue S.
# Available for comet.
add_S_serine=0

# Specify a static modification to the residue T.
# Available for comet.
add_T_threonine=0

# Specify a static modification to the residue U.
# Available for comet.
add_U_selenocysteine=0

# Specify a static modification to the residue V.
# Available for comet.
add_V_valine=0

# Specify a static modification to the residue W.
# Available for comet.
add_W_tryptophan=0

# Specify a static modification to the residue X.
# Available for comet.
add_X_user_amino_acid=0

# Specify a static modification to the residue Y.
# Available for comet.
add_Y_tyrosine=0

# Specify a static modification to the residue Z.
# Available for comet.
add_Z_user_amino_acid=0

#
# COMET_ENZYME_INFO _must_ be at the end of this parameters file
#
[COMET_ENZYME_INFO]
0.  No_enzyme                      0  -          -
1.  Trypsin                        1  KR         P
2.  Trypsin/P                      1  KR         -
3.  Lys_C                          1  K          P
4.  Lys_N                          0  K          -
5.  Arg_C                          1  R          P
6.  Asp_N                          0  D          -
7.  CNBr                           1  M          -
8.  Glu_C                          1  DE         P
9.  PepsinA                        1  FL         P
10. Chymotrypsin                   1  FWYL       P
